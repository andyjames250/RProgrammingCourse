library(rattle)
dsname <- "weatherAUS"ds     <- get(dsname)
ds
dim(ds)
names(ds)
head(ds)
tail(ds)
str(ds)
summary(Ds)
summary(ds)
names(ds) <- normVarNames(names(ds))
vars <- names(ds)target <- "rain_tomorrow"id <- c("date", "location")ignore     <- idinputs     <- setdiff(vars, target)numi       <- which(sapply(ds[vars], is.numeric))
numi
numerica <- names(numi)
numerics <- names(numi)
numerics
cati       <- which(sapply(ds[vars], is.factor))cati
categorics <- names(cati)categorics
library(randomForest)sum(is.na(ds))
ds[setdiff(vars, ignore)] <- na.roughfix(ds[setdiff(vars, ignore)])sum(is.na(ds))
￼p <- ggplot(ds, aes(wind_dir_3pm))p <- p + geom_bar(width=0.5)p
￼p <- ggplot(ds, aes(wind_dir_3pm))p <- p + geom_bar(width=0.5)
p <- ggplot(data=ds, aes(x=wind_dir_3pm))
library(ggplot2)
p <- ggplot(data=ds, aes(x=wind_dir_3pm))
p <- p + geom_bar()p
￼p <- ggplot(ds, aes(wind_dir_3pm))p <- p + geom_bar(width=1, colour="blue", fill="grey")p
p <- ggplot(ds, aes(wind_dir_3pm, fill=wind_dir_3pm))p <- p + geom_bar()p <- p + theme(legend.position="none")p
p <- ggplot(dslr, aes(location, temp_3pm, fill=location))p <- p + stat_summary(fun.y="mean", geom="bar")p <- p + stat_summary(fun.data="mean_cl_normal",                      geom="errorbar",                      conf.int=0.95,                      width=0.35)p <- p + coord_flip()p <- p + theme(legend.position="none")p
dslr <- within(ds, location <- factor(location, levels=rev(levels(location))))
p <- ggplot(dslr, aes(location, temp_3pm, fill=location))p <- p + stat_summary(fun.y="mean", geom="bar")p <- p + stat_summary(fun.data="mean_cl_normal",                      geom="errorbar",                      conf.int=0.95,                      width=0.35)p <- p + coord_flip()p <- p + theme(legend.position="none")p
cities <- c("Canberra", "Darwin", "Melbourne", "Sydney")p <- ggplot(subset(ds, location %in% cities),            aes(temp_3pm, colour = location, fill = location))p <- p + geom_density(alpha = 0.55)p
p <- ggplot(tolerance, aes(age, tolerance))p <- p + geom_point()p <- p + geom_smooth(method=lm)p <- p + facet_wrap(~id)￼
￼load(file.path("data", "tolerance.RData"))dim(tolerance)
library(lubridate) # Simplified date/timelibrary(ggplot2)   # Plotting of date/teim datalibrary(reshape2)  # Prepare data for plottinglibrary(rattle)library(scales)library(WDI)library(countrycode)library(plyr)      # Transform data.library(gridExtra) # Multiple plots on a grid
stroke <- read.csv(file.path("data", "stroke.csv"), sep=";", na.strings=".")
stroke <- read.csv(file.path("/Users/joelfabre/Downloads/data", "stroke.csv"), sep=";", na.strings=".")
dds <- stroke
head(dds$DIED)
class(dds$DIED)
class(dds$DSTR)
class(dds$DIED <- as.Date(dds$DIED, format="%d.%m.%Y"))
class(dds$DIED <- as.Date(dds$DSTR, format="%d.%m.%Y"))
head(dds$DIED)
getwd()
read.csv("mydata.csv")
dir()
getwd()
myfunction()
ls()
ls()
myfunction <- function(x) {#
	y <- rnorm(100)#
	mean(y)#
}
ls()
myfunction()
myfunction()
getwd()
dir()
source("myfunction.R")
source("myfunction.R")
ls()
second
second(4)
second(4)
second(4:10)
0/0
1/Inf
1/0
msg <- "hello"
msg
attributes(msg)
type(msg)
x < 1
x <- 1
x
msg
msg[1]
msg[1[1]]
x <- 1:20
x
x <- c(0.5, 0.6)
x
x[2]
x[0]
msg[0]
x <- vector("numeric, length=10")
x <- vector("numeric", length=10)
x
y <- c(1.7, "a")
c
y
y <- c(TRUE, 2)
y
y <- c(TRUE, "a")
y
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
m <- matrix(nrow=2, ncol=3)
m
dim(m)
m(0)
attributes(m)
m <- matrix(1:6, nrow=2, ncol=3)
m
m <- matrix(rnorm, nrow=2, ncol=3)
m <- matrix(rnorm(), nrow=2, ncol=3)
m <- matrix(rnorm(100), nrow=2, ncol=3)
m <- 1:10
dim(m) <- c(2,5)
m
x <- 1:
3
x
y <- 10:12
cbind(x,y)
rbind(x,y)
x <- list(1, "a", TRUE, 1+4i)
x
